// Create variables [optional]
$basefont: 14; // in pixels
$baseline: 20; // in pixels

@mixin vendor-prefix($name, $argument) {
  -webkit-#{$name}: #{$argument}!important;
  -ms-#{$name}: #{$argument}!important;
  -moz-#{$name}: #{$argument}!important;
  -o-#{$name}: #{$argument}!important;
  #{$name}: #{$argument}!important;
}

@mixin font-face($family, $filename, $style, $weight){
  @font-face{
    font-family: $family;
    src: asset-url("#{$filename}.eot"),
    asset-url("#{$filename}.eot?#iefix") format("embedded-opentype"),
    asset-url("#{$filename}.woff") format("woff"),
    asset-url("#{$filename}.ttf") format("truetype"),
    asset-url("#{$filename}.svg##{$family}") format("svg");
    font-style: $style;
    font-weight: $weight;
  }
}

// PIXELS TO EMS
// $target: the desired font size for the element
// $parent: the targets parent element font size (default: 16)
//------------------------------------------
@function pxtoem($target, $context: 16) {
  @return ($target / $context)+0em;
}
@mixin hide{
  display: none;
}
@mixin show{
  display: block;
}
@mixin reflex{
  -webkit-box-reflect: below -40px -webkit-gradient(linear, left top, left bottom, from(transparent), color-stop(50%, transparent), to(rgba(255,255,255,0.5)));
}
@mixin blur($blur:2px, $opacity:0.4){
  @include vendor-prefix(filter,blur($blur));
}
@mixin background-size($size: cover){
  @include vendor-prefix(background-size,$size!important);
}
@mixin gradient ($startColor: #eee, $endColor: white) {
  background-color: $startColor;
  background: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background: -webkit-linear-gradient(top, $startColor, $endColor);
  background: -moz-linear-gradient(top, $startColor, $endColor);
  background: -ms-linear-gradient(top, $startColor, $endColor);
  background: -o-linear-gradient(top, $startColor, $endColor);
}
@mixin horizontal-gradient ($startColor: #eee, $endColor: white) {
  background-color: $startColor;
  background-image: -webkit-gradient(linear, left top, right top, from($startColor), to($endColor));
  background-image: -webkit-linear-gradient(left, $startColor, $endColor);
  background-image: -moz-linear-gradient(left, $startColor, $endColor);
  background-image: -ms-linear-gradient(left, $startColor, $endColor);
  background-image: -o-linear-gradient(left, $startColor, $endColor);
}
@mixin no-shadow () {
  @include vendor-prefix(box-shadow,none);
}
@mixin drop-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
  @include vendor-prefix(box-shadow,$x $y $blur $spread rgba(0, 0, 0, $alpha));
}
@mixin inner-shadow ($x: 0, $y: 1px, $blur: 2px, $spread: 0, $alpha: 0.25) {
  @include vendor-prefix(box-shadow, inset $x $y $blur $spread rgba(0, 0, 0, $alpha));
}
// Rounded Corners Stuff
@mixin rounded-corners ($radius: 5px) {
  @include vendor-prefix(border-radius, $radius);
}
@mixin round-corners ($radius: 5px) {
  @include vendor-prefix(border-radius, $radius);
}
@mixin round-top-corners ($radius: 5px) {
  @include vendor-prefix(border-top-left-radius, $radius);
  @include vendor-prefix(border-top-right-radius, $radius);
}
@mixin round-bottom-corners ($radius: 5px) {
  @include vendor-prefix(border-bottom-left-radius, $radius);
  @include vendor-prefix(border-bottom-right-radius, $radius);
}
@mixin border-box{
  @include vendor-prefix(box-sizing,border-box);
}
@mixin content-box{
  @include vendor-prefix(box-sizing,content-box);
}
@mixin grayscale($value:100%){
  filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+, Firefox on Android */
  filter: gray; /* IE6-9 */
  -webkit-filter: grayscale($value); /* Chrome 19+, Safari 6+, Safari 6+ iOS */
}
@mixin opacity($opacity){
 opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8;
}
@mixin image-fill{
  height:187px!important;
  overflow: hidden;
  // @extend dev-borders(blue);
  img{
    @extend content-box;
    width: auto!important;
    height: 110%!important;
  /*
      width:260px!important;
      height:187px!important;
  */
  }
}
@mixin clearfix {
  // overflow: auto;
  zoom: 1;
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin dev-borders ($color:red) {
  border:1px solid $color;
}
// The Heights Mixin
$heights: 200;
$multiplier:5;
@mixin height-list {
  @for $i from 1 through $heights - $multiplier {
    .height-#{$i * $multiplier}{ 
      width: 1px;
      height: ($i * $multiplier) *1px;
    }
  }
}
@include height-list;
@mixin center{
  margin:0px auto!important;float:none!important; 
}
.center{
  @include center;
}
@mixin no-margin{
  margin:0px!important;
}
@mixin transition-linear{
  @include vendor-prefix(transition,all 250ms linear);
}
@mixin transition ($prop: all, $time: 0.25s, $ease: linear) {
  @include vendor-prefix(transition,all 250ms cubic-bezier(0.250, 0.100, 0.250, 1.000));
  @include vendor-prefix(transition-timing-function,cubic-bezier(0.250, 0.100, 0.250, 1.000));
    // -webkit-transition: $prop $time $ease;
    // -moz-transition: $prop $time $ease;
    // -o-transition: $prop $time $ease;
    // -ms-transition: $prop $time $ease;
    // transition: $prop $time $ease;
}
@mixin translatex($param){
  @include vendor-prefix(transform,translateX($param));
}
// generic transform
@mixin transform($transforms) {
  @include vendor-prefix(transform,$transforms);
}
// rotate
@mixin rotate ($deg) {
  @include transform(rotate(#{$deg}deg));
}
// scale
@mixin scale($scale) {
   @include transform(scale($scale));
}
// translate
@mixin translate ($x, $y) {
   @include transform(translate($x, $y));
}
// skew
@mixin skew ($x, $y) {
   @include transform(skew(#{$x}deg, #{$y}deg));
}
//transform origin
@mixin transform-origin ($origin) {
  @include vendor-prefix(transform-origin,$origin);
}
@mixin placeholder-color($color){
  *::-webkit-input-placeholder {color: $color!important;}
  ::-webkit-input-placeholder { color:$color!important; }
  ::-moz-placeholder { color:$color!important; } /* firefox 19+ */
  :-moz-placeholder { color:$color!important; } /* firefox 19+ */
  :-ms-input-placeholder { color:$color!important; } /* ie */
  input:-moz-placeholder { color:$color!important; }
}